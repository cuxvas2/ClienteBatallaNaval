//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoBatallaNaval.ServicioAServidor {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Jugador", Namespace="http://schemas.datacontract.org/2004/07/Entidades")]
    [System.SerializableAttribute()]
    public partial class Jugador : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApodoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContraseñaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CorreoElectronicoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdJuegoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdJugadorField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apodo {
            get {
                return this.ApodoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApodoField, value) != true)) {
                    this.ApodoField = value;
                    this.RaisePropertyChanged("Apodo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Contraseña {
            get {
                return this.ContraseñaField;
            }
            set {
                if ((object.ReferenceEquals(this.ContraseñaField, value) != true)) {
                    this.ContraseñaField = value;
                    this.RaisePropertyChanged("Contraseña");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CorreoElectronico {
            get {
                return this.CorreoElectronicoField;
            }
            set {
                if ((object.ReferenceEquals(this.CorreoElectronicoField, value) != true)) {
                    this.CorreoElectronicoField = value;
                    this.RaisePropertyChanged("CorreoElectronico");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdJuego {
            get {
                return this.IdJuegoField;
            }
            set {
                if ((this.IdJuegoField.Equals(value) != true)) {
                    this.IdJuegoField = value;
                    this.RaisePropertyChanged("IdJuego");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdJugador {
            get {
                return this.IdJugadorField;
            }
            set {
                if ((this.IdJugadorField.Equals(value) != true)) {
                    this.IdJugadorField = value;
                    this.RaisePropertyChanged("IdJugador");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chat", Namespace="http://schemas.datacontract.org/2004/07/Entidades")]
    [System.SerializableAttribute()]
    public partial class Chat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MensajeEnviadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemitenteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SalaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MensajeEnviado {
            get {
                return this.MensajeEnviadoField;
            }
            set {
                if ((object.ReferenceEquals(this.MensajeEnviadoField, value) != true)) {
                    this.MensajeEnviadoField = value;
                    this.RaisePropertyChanged("MensajeEnviado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remitente {
            get {
                return this.RemitenteField;
            }
            set {
                if ((object.ReferenceEquals(this.RemitenteField, value) != true)) {
                    this.RemitenteField = value;
                    this.RaisePropertyChanged("Remitente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sala {
            get {
                return this.SalaField;
            }
            set {
                if ((object.ReferenceEquals(this.SalaField, value) != true)) {
                    this.SalaField = value;
                    this.RaisePropertyChanged("Sala");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioAServidor.IAdminiUsuarios")]
    public interface IAdminiUsuarios {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiUsuarios/iniciarSesion", ReplyAction="http://tempuri.org/IAdminiUsuarios/iniciarSesionResponse")]
        bool iniciarSesion(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiUsuarios/iniciarSesion", ReplyAction="http://tempuri.org/IAdminiUsuarios/iniciarSesionResponse")]
        System.Threading.Tasks.Task<bool> iniciarSesionAsync(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiUsuarios/registarUsuario", ReplyAction="http://tempuri.org/IAdminiUsuarios/registarUsuarioResponse")]
        bool registarUsuario(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiUsuarios/registarUsuario", ReplyAction="http://tempuri.org/IAdminiUsuarios/registarUsuarioResponse")]
        System.Threading.Tasks.Task<bool> registarUsuarioAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiUsuarios/cambiarContraseña", ReplyAction="http://tempuri.org/IAdminiUsuarios/cambiarContraseñaResponse")]
        bool cambiarContraseña(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiUsuarios/cambiarContraseña", ReplyAction="http://tempuri.org/IAdminiUsuarios/cambiarContraseñaResponse")]
        System.Threading.Tasks.Task<bool> cambiarContraseñaAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiUsuarios/recuperarJugadorPorCorreo", ReplyAction="http://tempuri.org/IAdminiUsuarios/recuperarJugadorPorCorreoResponse")]
        ProyectoBatallaNaval.ServicioAServidor.Jugador recuperarJugadorPorCorreo(string correoElectronico);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiUsuarios/recuperarJugadorPorCorreo", ReplyAction="http://tempuri.org/IAdminiUsuarios/recuperarJugadorPorCorreoResponse")]
        System.Threading.Tasks.Task<ProyectoBatallaNaval.ServicioAServidor.Jugador> recuperarJugadorPorCorreoAsync(string correoElectronico);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminiUsuariosChannel : ProyectoBatallaNaval.ServicioAServidor.IAdminiUsuarios, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminiUsuariosClient : System.ServiceModel.ClientBase<ProyectoBatallaNaval.ServicioAServidor.IAdminiUsuarios>, ProyectoBatallaNaval.ServicioAServidor.IAdminiUsuarios {
        
        public AdminiUsuariosClient() {
        }
        
        public AdminiUsuariosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AdminiUsuariosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminiUsuariosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AdminiUsuariosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool iniciarSesion(string usuario, string contraseña) {
            return base.Channel.iniciarSesion(usuario, contraseña);
        }
        
        public System.Threading.Tasks.Task<bool> iniciarSesionAsync(string usuario, string contraseña) {
            return base.Channel.iniciarSesionAsync(usuario, contraseña);
        }
        
        public bool registarUsuario(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.registarUsuario(jugador);
        }
        
        public System.Threading.Tasks.Task<bool> registarUsuarioAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.registarUsuarioAsync(jugador);
        }
        
        public bool cambiarContraseña(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.cambiarContraseña(jugador);
        }
        
        public System.Threading.Tasks.Task<bool> cambiarContraseñaAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.cambiarContraseñaAsync(jugador);
        }
        
        public ProyectoBatallaNaval.ServicioAServidor.Jugador recuperarJugadorPorCorreo(string correoElectronico) {
            return base.Channel.recuperarJugadorPorCorreo(correoElectronico);
        }
        
        public System.Threading.Tasks.Task<ProyectoBatallaNaval.ServicioAServidor.Jugador> recuperarJugadorPorCorreoAsync(string correoElectronico) {
            return base.Channel.recuperarJugadorPorCorreoAsync(correoElectronico);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioAServidor.IAdminiSocial", CallbackContract=typeof(ProyectoBatallaNaval.ServicioAServidor.IAdminiSocialCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IAdminiSocial {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/Conectado")]
        void Conectado(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/Conectado")]
        System.Threading.Tasks.Task ConectadoAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/estaEscribiendo")]
        void estaEscribiendo(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/estaEscribiendo")]
        System.Threading.Tasks.Task estaEscribiendoAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IAdminiSocial/desconectado")]
        void desconectado(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IAdminiSocial/desconectado")]
        System.Threading.Tasks.Task desconectadoAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/enviarMensaje")]
        void enviarMensaje(ProyectoBatallaNaval.ServicioAServidor.Chat mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/enviarMensaje")]
        System.Threading.Tasks.Task enviarMensajeAsync(ProyectoBatallaNaval.ServicioAServidor.Chat mensaje);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/crearSala")]
        void crearSala(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/crearSala")]
        System.Threading.Tasks.Task crearSalaAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/unirseASala")]
        void unirseASala(string sala, ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/unirseASala")]
        System.Threading.Tasks.Task unirseASalaAsync(string sala, ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/todoListo")]
        void todoListo(string sala, string jugador, int numeroDeListos);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/todoListo")]
        System.Threading.Tasks.Task todoListoAsync(string sala, string jugador, int numeroDeListos);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/cancelarTodoListo")]
        void cancelarTodoListo(string sala, string jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/cancelarTodoListo")]
        System.Threading.Tasks.Task cancelarTodoListoAsync(string sala, string jugador);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminiSocialCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/actualizarJugadores")]
        void actualizarJugadores(ProyectoBatallaNaval.ServicioAServidor.Jugador[] jugadores);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/unionDeJugador")]
        void unionDeJugador(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/jugadorSeFue")]
        void jugadorSeFue(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiSocial/escribiendoEnCallback")]
        void escribiendoEnCallback(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiSocial/recibirMensaje", ReplyAction="http://tempuri.org/IAdminiSocial/recibirMensajeResponse")]
        void recibirMensaje(ProyectoBatallaNaval.ServicioAServidor.Chat respuesta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiSocial/recibirCodigoSala", ReplyAction="http://tempuri.org/IAdminiSocial/recibirCodigoSalaResponse")]
        void recibirCodigoSala(string codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiSocial/jugadorSeUnio", ReplyAction="http://tempuri.org/IAdminiSocial/jugadorSeUnioResponse")]
        void jugadorSeUnio(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador, string sala, bool seUnio);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiSocial/recibirTodoListo", ReplyAction="http://tempuri.org/IAdminiSocial/recibirTodoListoResponse")]
        void recibirTodoListo(string contricante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiSocial/recibirTodoListoParaIniciar", ReplyAction="http://tempuri.org/IAdminiSocial/recibirTodoListoParaIniciarResponse")]
        void recibirTodoListoParaIniciar(string contricante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiSocial/recibirCancelarListo", ReplyAction="http://tempuri.org/IAdminiSocial/recibirCancelarListoResponse")]
        void recibirCancelarListo(string contricante);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminiSocialChannel : ProyectoBatallaNaval.ServicioAServidor.IAdminiSocial, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminiSocialClient : System.ServiceModel.DuplexClientBase<ProyectoBatallaNaval.ServicioAServidor.IAdminiSocial>, ProyectoBatallaNaval.ServicioAServidor.IAdminiSocial {
        
        public AdminiSocialClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AdminiSocialClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AdminiSocialClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AdminiSocialClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AdminiSocialClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Conectado(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            base.Channel.Conectado(jugador);
        }
        
        public System.Threading.Tasks.Task ConectadoAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.ConectadoAsync(jugador);
        }
        
        public void estaEscribiendo(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            base.Channel.estaEscribiendo(jugador);
        }
        
        public System.Threading.Tasks.Task estaEscribiendoAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.estaEscribiendoAsync(jugador);
        }
        
        public void desconectado(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            base.Channel.desconectado(jugador);
        }
        
        public System.Threading.Tasks.Task desconectadoAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.desconectadoAsync(jugador);
        }
        
        public void enviarMensaje(ProyectoBatallaNaval.ServicioAServidor.Chat mensaje) {
            base.Channel.enviarMensaje(mensaje);
        }
        
        public System.Threading.Tasks.Task enviarMensajeAsync(ProyectoBatallaNaval.ServicioAServidor.Chat mensaje) {
            return base.Channel.enviarMensajeAsync(mensaje);
        }
        
        public void crearSala(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            base.Channel.crearSala(jugador);
        }
        
        public System.Threading.Tasks.Task crearSalaAsync(ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.crearSalaAsync(jugador);
        }
        
        public void unirseASala(string sala, ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            base.Channel.unirseASala(sala, jugador);
        }
        
        public System.Threading.Tasks.Task unirseASalaAsync(string sala, ProyectoBatallaNaval.ServicioAServidor.Jugador jugador) {
            return base.Channel.unirseASalaAsync(sala, jugador);
        }
        
        public void todoListo(string sala, string jugador, int numeroDeListos) {
            base.Channel.todoListo(sala, jugador, numeroDeListos);
        }
        
        public System.Threading.Tasks.Task todoListoAsync(string sala, string jugador, int numeroDeListos) {
            return base.Channel.todoListoAsync(sala, jugador, numeroDeListos);
        }
        
        public void cancelarTodoListo(string sala, string jugador) {
            base.Channel.cancelarTodoListo(sala, jugador);
        }
        
        public System.Threading.Tasks.Task cancelarTodoListoAsync(string sala, string jugador) {
            return base.Channel.cancelarTodoListoAsync(sala, jugador);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioAServidor.IAdminiPartida", CallbackContract=typeof(ProyectoBatallaNaval.ServicioAServidor.IAdminiPartidaCallback))]
    public interface IAdminiPartida {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiPartida/tiro", ReplyAction="http://tempuri.org/IAdminiPartida/tiroResponse")]
        bool tiro(int[] coordenadas, string contricante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiPartida/tiro", ReplyAction="http://tempuri.org/IAdminiPartida/tiroResponse")]
        System.Threading.Tasks.Task<bool> tiroAsync(int[] coordenadas, string contricante);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiPartida/IniciarPartida", ReplyAction="http://tempuri.org/IAdminiPartida/IniciarPartidaResponse")]
        void IniciarPartida(string jugador);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiPartida/IniciarPartida", ReplyAction="http://tempuri.org/IAdminiPartida/IniciarPartidaResponse")]
        System.Threading.Tasks.Task IniciarPartidaAsync(string jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiPartida/TerminarPartida")]
        void TerminarPartida(string jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiPartida/TerminarPartida")]
        System.Threading.Tasks.Task TerminarPartidaAsync(string jugador);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiPartida/PrimerTiro")]
        void PrimerTiro(string jugador1, string jugador2);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAdminiPartida/PrimerTiro")]
        System.Threading.Tasks.Task PrimerTiroAsync(string jugador1, string jugador2);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminiPartidaCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiPartida/insertarDisparo", ReplyAction="http://tempuri.org/IAdminiPartida/insertarDisparoResponse")]
        bool insertarDisparo(int[] coordenadas);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiPartida/IniciarPartidaCallback", ReplyAction="http://tempuri.org/IAdminiPartida/IniciarPartidaCallbackResponse")]
        void IniciarPartidaCallback(bool inicar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAdminiPartida/PrimerTiroCallback", ReplyAction="http://tempuri.org/IAdminiPartida/PrimerTiroCallbackResponse")]
        void PrimerTiroCallback(bool jugadorInicio);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAdminiPartidaChannel : ProyectoBatallaNaval.ServicioAServidor.IAdminiPartida, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AdminiPartidaClient : System.ServiceModel.DuplexClientBase<ProyectoBatallaNaval.ServicioAServidor.IAdminiPartida>, ProyectoBatallaNaval.ServicioAServidor.IAdminiPartida {
        
        public AdminiPartidaClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public AdminiPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public AdminiPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AdminiPartidaClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public AdminiPartidaClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public bool tiro(int[] coordenadas, string contricante) {
            return base.Channel.tiro(coordenadas, contricante);
        }
        
        public System.Threading.Tasks.Task<bool> tiroAsync(int[] coordenadas, string contricante) {
            return base.Channel.tiroAsync(coordenadas, contricante);
        }
        
        public void IniciarPartida(string jugador) {
            base.Channel.IniciarPartida(jugador);
        }
        
        public System.Threading.Tasks.Task IniciarPartidaAsync(string jugador) {
            return base.Channel.IniciarPartidaAsync(jugador);
        }
        
        public void TerminarPartida(string jugador) {
            base.Channel.TerminarPartida(jugador);
        }
        
        public System.Threading.Tasks.Task TerminarPartidaAsync(string jugador) {
            return base.Channel.TerminarPartidaAsync(jugador);
        }
        
        public void PrimerTiro(string jugador1, string jugador2) {
            base.Channel.PrimerTiro(jugador1, jugador2);
        }
        
        public System.Threading.Tasks.Task PrimerTiroAsync(string jugador1, string jugador2) {
            return base.Channel.PrimerTiroAsync(jugador1, jugador2);
        }
    }
}
